name: Reusable Build and Publish Image Workflow

on:
  workflow_call:
    inputs:
      base-image:
        required: true
        type: string
      image-name:
        required: true
        type: string
      software-version:
        required: true
        type: string
    secrets:
      GHCR_TOKEN:
        required: true

jobs:
  build_image:
    name: Build and Publish Image
    runs-on: ubuntu-latest
    steps:
      - name: Pull base image
        run: docker pull ${{ inputs.base-image }}

      - id: base_image_sha
        run: echo "base_image_sha=$(docker image inspect --format='{{index .RepoDigests 0}}' ${{ inputs.base-image }})" >> $GITHUB_OUTPUT

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/dlrobson/${{ inputs.image-name }}
          tags: |
            latest
            ${{ inputs.software-version }}
          labels: |
            org.opencontainers.image.version=${{ inputs.software-version }}
            org.opencontainers.image.licenses=MIT
          annotations: |
            org.opencontainers.image.version=${{ inputs.software-version }}
            org.opencontainers.image.licenses=MIT
            base_image_sha=${{ steps.base_image_sha.outputs.base_image_sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        env:
          # https://github.com/orgs/community/discussions/45969#discussion-4811503
          BUILDX_NO_DEFAULT_ATTESTATIONS: 1

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            UID=1000
            GID=1000
            BASE_IMAGE=${{ inputs.base-image }}
          push: ${{ github.event_name != 'pull_request' }}
          annotations: |
            ${{ steps.metadata.outputs.annotations }}
          tags: |
            ${{ steps.metadata.outputs.tags }}
          labels: |
            ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      # Source: https://github.com/orgs/community/discussions/26716#discussioncomment-3253034
      - name: Delete untagged versions
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GHCR_TOKEN }}
          script: |
            // Convert any slashes in the image name to %2F
            const imageName = "${{ inputs.image-name }}".replace(/\//g, '%2F');
            const response = await github.request("GET /users/dlrobson/packages/container/" + imageName + "/versions",
              { per_page: 100 
            });
            for(version of response.data) {
                if (version.metadata.container.tags.length == 0) {
                    console.log("delete " + version.id)
                    const deleteResponse = await github.request("DELETE /users/dlrobson/packages/container/" + imageName + "/versions/" + version.id, { });
                    console.log("status " + deleteResponse.status)
                }
            }
