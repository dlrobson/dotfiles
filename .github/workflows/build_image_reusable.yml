name: Reusable Build and Publish Image Workflow

on:
  workflow_call:
    inputs:
      base-image:
        required: true
        type: string
      image-name:
        required: true
        type: string
    secrets:
      GHCR_TOKEN:
        required: true

jobs:
  build_image:
    name: Build and Publish Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      # We will use the date and month as the tag for the image in the format YYYY-MM.
      # This will allow us to store older images and easily identify when they were built.
      # I don't need finer granularity than this for my use case. This will be set in the
      # version_info job and used in the build_image jobs
      - name: Generate Tag
        id: version_info
        run: echo "CONTAINER_TAG=$(date +%Y-%m)" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image-name }}
          tags: |
            type=semver,pattern={{date 'YYYY-MM'}}
          labels: |
            org.opencontainers.image.version=${{ steps.version_info.outputs.CONTAINER_TAG }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            UID=1000
            GID=1000
            BASE_IMAGE=${{ inputs.base-image }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.metadata.outputs.tags }}
          # TODO(dan): Add a label for the base image's sha256 digest
          # TODO(dan): Perhaps add a description of the base image
          labels: |
            ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64
